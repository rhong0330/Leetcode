class Solution {
    private val digitToChar = mapOf(
        '2' to "abc", '3' to "def", '4' to "ghi", '5' to "jkl",
        '6' to "mno", '7' to "pqrs", '8' to "tuv", '9' to "wxyz"
    )

    fun letterCombinations(digits: String): List<String> {
        if (digits.isEmpty()) return emptyList()
        val result = mutableListOf<String>()
        backtrack(digits, 0, StringBuilder(), result)
        return result
    }

    private fun backtrack(digits: String, index: Int, current: StringBuilder, result: MutableList<String>) {
        if (index == digits.length) {
            result.add(current.toString())
            return
        }

        val letters = digitToChar[digits[index]] ?: ""
        for (char in letters) {
            current.append(char)
            backtrack(digits, index + 1, current, result)
            current.deleteCharAt(current.length - 1) // Undo choice
        }
    }
}
